{"ast":null,"code":"import axios from \"axios\";\nimport { call, put } from \"redux-saga/effects\"; // 액션 타입 정의\n\nexport const GET_USERS_START = \"redux-advanced/users/GET_USERS_START\"; // 깃헙 api 호출을 시작하는 것을 의미\n\nexport const GET_USERS_SUCCESS = \"redux-advanced/users/GET_USERS_SUCCESS\"; // api 호출에 대한 응답이 성공한 경우\n\nexport const GET_USERS_FAIL = \"redux-advanced/users/GET_USERS_FAIL\"; // api 호출에 실패한 경우\n// redux-promise-middleware\n\nconst GET_USERS = \"redux-advanced/users/GET_USERS\";\nexport const GET_USERS_PENDING = \"redux-advanced/users/GET_USERS_PENDING\";\nexport const GET_USERS_FULFILLED = \"redux-advanced/users/GET_USERS_FULFILLED\";\nexport const GET_USERS_REJECTED = \"redux-advanced/users/GET_USERS_REJECTED\"; // 액션 생성 함수\n\nexport function getUsersStart() {\n  return {\n    type: GET_USERS_START\n  };\n}\nexport function getUsersSuccess(data) {\n  return {\n    type: GET_USERS_SUCCESS,\n    data\n  };\n}\nexport function getUsersFail(error) {\n  return {\n    type: GET_USERS_FAIL,\n    error\n  };\n} // 초기값\n\nconst initialState = {\n  loading: false,\n  data: [],\n  error: null\n}; // 리듀서\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === GET_USERS_START || action.type === GET_USERS_PENDING) {\n    return { ...state,\n      loading: true,\n      error: null\n    };\n  }\n\n  if (action.type === GET_USERS_SUCCESS) {\n    return { ...state,\n      loading: false,\n      error: null,\n      data: action.data\n    };\n  }\n\n  if (action.type === GET_USERS_FULFILLED) {\n    return { ...state,\n      loading: false,\n      error: null,\n      data: action.payload\n    };\n  }\n\n  if (action.type === GET_USERS_FAIL) {\n    return { ...state,\n      loading: false,\n      error: action.error\n    };\n  }\n\n  if (action.type === GET_USERS_REJECTED) {\n    return { ...state,\n      loading: false,\n      error: action.payload\n    };\n  }\n\n  return state;\n} // redux-promise-middleware\n\nexport function getUsersPromise() {\n  return {\n    type: GET_USERS,\n    payload: async () => {\n      const res = await axios.get(\"https://api.github.com/users\");\n      return res.data;\n    }\n  };\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n} // redux-thunk\n\n\nexport function getUsersThunk() {\n  return async (dispatch, getState, _ref) => {\n    let {\n      history\n    } = _ref;\n\n    try {\n      console.log(history);\n      dispatch(getUsersStart()); // sleep\n\n      await sleep(2000);\n      const res = await axios.get(\"https://api.github.com/users\");\n      dispatch(getUsersSuccess(res.data));\n      history.push(\"/\");\n    } catch (error) {\n      dispatch(getUsersFail(error));\n    }\n  };\n} // redux-saga\n\nfunction* getUsersSaga(action) {\n  try {\n    yield put(getUsersStart()); // sleep\n\n    yield delay(2000);\n    const res = yield call(axios.get, \"https://api.github.com/users\");\n    dispatch(getUsersSuccess(res.data));\n    history.push(\"/\");\n  } catch (error) {\n    dispatch(getUsersFail(error));\n  }\n}","map":{"version":3,"names":["axios","call","put","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAIL","GET_USERS","GET_USERS_PENDING","GET_USERS_FULFILLED","GET_USERS_REJECTED","getUsersStart","type","getUsersSuccess","data","getUsersFail","error","initialState","loading","reducer","state","action","payload","getUsersPromise","res","get","sleep","ms","Promise","resolve","setTimeout","getUsersThunk","dispatch","getState","history","console","log","push","getUsersSaga","delay"],"sources":["/Users/choi/Desktop/React/redux/redux-saga/src/redux/modules/users.js"],"sourcesContent":["import axios from \"axios\"\nimport { call, put } from \"redux-saga/effects\"\n\n// 액션 타입 정의\nexport const GET_USERS_START = \"redux-advanced/users/GET_USERS_START\" // 깃헙 api 호출을 시작하는 것을 의미\nexport const GET_USERS_SUCCESS = \"redux-advanced/users/GET_USERS_SUCCESS\" // api 호출에 대한 응답이 성공한 경우\nexport const GET_USERS_FAIL = \"redux-advanced/users/GET_USERS_FAIL\" // api 호출에 실패한 경우\n\n// redux-promise-middleware\nconst GET_USERS = \"redux-advanced/users/GET_USERS\"\nexport const GET_USERS_PENDING = \"redux-advanced/users/GET_USERS_PENDING\"\nexport const GET_USERS_FULFILLED = \"redux-advanced/users/GET_USERS_FULFILLED\"\nexport const GET_USERS_REJECTED = \"redux-advanced/users/GET_USERS_REJECTED\"\n\n// 액션 생성 함수\nexport function getUsersStart() {\n\treturn {\n\t\ttype: GET_USERS_START,\n\t}\n}\n\nexport function getUsersSuccess(data) {\n\treturn {\n\t\ttype: GET_USERS_SUCCESS,\n\t\tdata,\n\t}\n}\n\nexport function getUsersFail(error) {\n\treturn {\n\t\ttype: GET_USERS_FAIL,\n\t\terror,\n\t}\n}\n\n// 초기값\nconst initialState = {\n\tloading: false,\n\tdata: [],\n\terror: null,\n}\n\n// 리듀서\nexport default function reducer(state = initialState, action) {\n\tif (action.type === GET_USERS_START || action.type === GET_USERS_PENDING) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tloading: true,\n\t\t\terror: null,\n\t\t}\n\t}\n\n\tif (action.type === GET_USERS_SUCCESS) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tloading: false,\n\t\t\terror: null,\n\t\t\tdata: action.data,\n\t\t}\n\t}\n\n\tif (action.type === GET_USERS_FULFILLED) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tloading: false,\n\t\t\terror: null,\n\t\t\tdata: action.payload,\n\t\t}\n\t}\n\n\tif (action.type === GET_USERS_FAIL) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tloading: false,\n\t\t\terror: action.error,\n\t\t}\n\t}\n\n\tif (action.type === GET_USERS_REJECTED) {\n\t\treturn {\n\t\t\t...state,\n\t\t\tloading: false,\n\t\t\terror: action.payload,\n\t\t}\n\t}\n\n\treturn state\n}\n\n// redux-promise-middleware\nexport function getUsersPromise() {\n\treturn {\n\t\ttype: GET_USERS,\n\t\tpayload: async () => {\n\t\t\tconst res = await axios.get(\"https://api.github.com/users\")\n\t\t\treturn res.data\n\t\t},\n\t}\n}\n\nfunction sleep(ms) {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(() => {\n\t\t\tresolve()\n\t\t}, ms)\n\t})\n}\n\n// redux-thunk\nexport function getUsersThunk() {\n\treturn async (dispatch, getState, { history }) => {\n\t\ttry {\n\t\t\tconsole.log(history)\n\t\t\tdispatch(getUsersStart())\n\t\t\t// sleep\n\t\t\tawait sleep(2000)\n\t\t\tconst res = await axios.get(\"https://api.github.com/users\")\n\t\t\tdispatch(getUsersSuccess(res.data))\n\t\t\thistory.push(\"/\")\n\t\t} catch (error) {\n\t\t\tdispatch(getUsersFail(error))\n\t\t}\n\t}\n}\n\n// redux-saga\nfunction* getUsersSaga(action) {\n\ttry {\n\t\tyield put(getUsersStart())\n\t\t// sleep\n\t\tyield delay(2000)\n\t\tconst res = yield call(axios.get, \"https://api.github.com/users\")\n\n\t\tdispatch(getUsersSuccess(res.data))\n\t\thistory.push(\"/\")\n\t} catch (error) {\n\t\tdispatch(getUsersFail(error))\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}