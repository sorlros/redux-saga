{"ast":null,"code":"// 액션의 타입들을 오타를 방지하기 위해 변수로 미리 지정\nimport { axios } from \"axios\";\nexport const ADD_TODO = \"ADD_TODO\";\nexport const COMPLETE_TODO = \"COMPLETE_TODO\"; // 액션 생성 함수\n\nexport function addTodo(text) {\n  return {\n    type: ADD_TODO,\n    text\n  };\n}\nexport function completeTodo(index) {\n  return {\n    type: COMPLETE_TODO,\n    index\n  };\n}\nexport const SHOW_ALL = \"SHOW_ALL\";\nexport const SHOW_COMPLETE = \"SHOW_COMPLETE\";\nexport function showAll() {\n  return {\n    type: SHOW_ALL\n  };\n}\nexport function showComplete() {\n  return {\n    type: SHOW_COMPLETE\n  };\n} // users\n\nexport const GET_USERS_START = \"GET_USERS_START\"; // 깃헙 api 호출을 시작하는 것을 의미\n\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\"; // api 호출에 대한 응답이 성공한 경우\n\nexport const GET_USERS_FAIL = \"GET_USERS_FAIL\"; // api 호출에 실패한 경우\n\nexport function getUsersStart() {\n  return {\n    type: GET_USERS_START\n  };\n}\nexport function getUsersSuccess(data) {\n  return {\n    type: GET_USERS_SUCCESS,\n    data\n  };\n}\nexport function getUsersFail(error) {\n  return {\n    type: GET_USERS_FAIL,\n    error\n  };\n}\nexport function getUsersThunk() {\n  return async dispatch => {\n    try {\n      dispatch(getUsersStart());\n      const res = await axios.get(\"https://api.github.com/users\");\n      dispatch(getUsersSuccess(res.data));\n    } catch (error) {\n      dispatch(getUsersFail(error));\n    }\n  };\n}\nconst GET_USERS = \"GET_USERS\";\nexport function getUsersPromise() {\n  return {\n    type: GET_USERS,\n    payload: async () => {\n      const res = await axios.get(\"https://api.github.com/users\");\n      return res.data;\n    }\n  };\n}","map":{"version":3,"names":["axios","ADD_TODO","COMPLETE_TODO","addTodo","text","type","completeTodo","index","SHOW_ALL","SHOW_COMPLETE","showAll","showComplete","GET_USERS_START","GET_USERS_SUCCESS","GET_USERS_FAIL","getUsersStart","getUsersSuccess","data","getUsersFail","error","getUsersThunk","dispatch","res","get","GET_USERS","getUsersPromise","payload"],"sources":["/Users/choi/Desktop/React/redux/redux-basic/src/redux/actions.js"],"sourcesContent":["// 액션의 타입들을 오타를 방지하기 위해 변수로 미리 지정\nimport { axios } from \"axios\"\nexport const ADD_TODO = \"ADD_TODO\"\nexport const COMPLETE_TODO = \"COMPLETE_TODO\"\n\n// 액션 생성 함수\nexport function addTodo(text) {\n\treturn {\n\t\ttype: ADD_TODO,\n\t\ttext,\n\t}\n}\n\nexport function completeTodo(index) {\n\treturn {\n\t\ttype: COMPLETE_TODO,\n\t\tindex,\n\t}\n}\n\nexport const SHOW_ALL = \"SHOW_ALL\"\nexport const SHOW_COMPLETE = \"SHOW_COMPLETE\"\n\nexport function showAll() {\n\treturn {\n\t\ttype: SHOW_ALL,\n\t}\n}\n\nexport function showComplete() {\n\treturn {\n\t\ttype: SHOW_COMPLETE,\n\t}\n}\n\n// users\n\nexport const GET_USERS_START = \"GET_USERS_START\" // 깃헙 api 호출을 시작하는 것을 의미\nexport const GET_USERS_SUCCESS = \"GET_USERS_SUCCESS\" // api 호출에 대한 응답이 성공한 경우\nexport const GET_USERS_FAIL = \"GET_USERS_FAIL\" // api 호출에 실패한 경우\n\nexport function getUsersStart() {\n\treturn {\n\t\ttype: GET_USERS_START,\n\t}\n}\n\nexport function getUsersSuccess(data) {\n\treturn {\n\t\ttype: GET_USERS_SUCCESS,\n\t\tdata,\n\t}\n}\n\nexport function getUsersFail(error) {\n\treturn {\n\t\ttype: GET_USERS_FAIL,\n\t\terror,\n\t}\n}\n\nexport function getUsersThunk() {\n\treturn async (dispatch) => {\n\t\ttry {\n\t\t\tdispatch(getUsersStart())\n\t\t\tconst res = await axios.get(\"https://api.github.com/users\")\n\t\t\tdispatch(getUsersSuccess(res.data))\n\t\t} catch (error) {\n\t\t\tdispatch(getUsersFail(error))\n\t\t}\n\t}\n}\n\nconst GET_USERS = \"GET_USERS\"\nexport function getUsersPromise() {\n\treturn {\n\t\ttype: GET_USERS,\n\t\tpayload: async () => {\n\t\t\tconst res = await axios.get(\"https://api.github.com/users\")\n\t\t\treturn res.data\n\t\t},\n\t}\n}\n"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,OAAtB;AACA,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB,C,CAEP;;AACA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;EAC7B,OAAO;IACNC,IAAI,EAAEJ,QADA;IAENG;EAFM,CAAP;AAIA;AAED,OAAO,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;EACnC,OAAO;IACNF,IAAI,EAAEH,aADA;IAENK;EAFM,CAAP;AAIA;AAED,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,SAASC,OAAT,GAAmB;EACzB,OAAO;IACNL,IAAI,EAAEG;EADA,CAAP;AAGA;AAED,OAAO,SAASG,YAAT,GAAwB;EAC9B,OAAO;IACNN,IAAI,EAAEI;EADA,CAAP;AAGA,C,CAED;;AAEA,OAAO,MAAMG,eAAe,GAAG,iBAAxB,C,CAA0C;;AACjD,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B,C,CAA8C;;AACrD,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAwC;;AAE/C,OAAO,SAASC,aAAT,GAAyB;EAC/B,OAAO;IACNV,IAAI,EAAEO;EADA,CAAP;AAGA;AAED,OAAO,SAASI,eAAT,CAAyBC,IAAzB,EAA+B;EACrC,OAAO;IACNZ,IAAI,EAAEQ,iBADA;IAENI;EAFM,CAAP;AAIA;AAED,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;EACnC,OAAO;IACNd,IAAI,EAAES,cADA;IAENK;EAFM,CAAP;AAIA;AAED,OAAO,SAASC,aAAT,GAAyB;EAC/B,OAAO,MAAOC,QAAP,IAAoB;IAC1B,IAAI;MACHA,QAAQ,CAACN,aAAa,EAAd,CAAR;MACA,MAAMO,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,8BAAV,CAAlB;MACAF,QAAQ,CAACL,eAAe,CAACM,GAAG,CAACL,IAAL,CAAhB,CAAR;IACA,CAJD,CAIE,OAAOE,KAAP,EAAc;MACfE,QAAQ,CAACH,YAAY,CAACC,KAAD,CAAb,CAAR;IACA;EACD,CARD;AASA;AAED,MAAMK,SAAS,GAAG,WAAlB;AACA,OAAO,SAASC,eAAT,GAA2B;EACjC,OAAO;IACNpB,IAAI,EAAEmB,SADA;IAENE,OAAO,EAAE,YAAY;MACpB,MAAMJ,GAAG,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAU,8BAAV,CAAlB;MACA,OAAOD,GAAG,CAACL,IAAX;IACA;EALK,CAAP;AAOA"},"metadata":{},"sourceType":"module"}