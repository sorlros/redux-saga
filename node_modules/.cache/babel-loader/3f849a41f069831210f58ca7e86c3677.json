{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport todoApp from \"./reducers/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\"; // function middleware1(store) {\n// \tconsole.log(\"middleware1\", 0)\n// \treturn (next) => {\n// \t\tconsole.log(\"middleware1\", 1, next)\n// \t\treturn (action) => {\n// \t\t\tconsole.log(\"middleware1\", 2)\n// \t\t\tconst returnValue = next(action)\n// \t\t\tconsole.log(\"middleware1\", 3)\n// \t\t\treturn returnValue\n// \t\t}\n// \t}\n// }\n// function middleware2(store) {\n// \tconsole.log(\"middleware2\", 0)\n// \treturn (next) => {\n// \t\tconsole.log(\"middleware2\", 1, next)\n// \t\treturn (action) => {\n// \t\t\tconsole.log(\"middleware2\", 2)\n// \t\t\tconst returnValue = next(action)\n// \t\t\tconsole.log(\"middleware2\", 3)\n// \t\t\treturn returnValue\n// \t\t}\n// \t}\n// }\n\nconst store = createStore(todoApp, applyMiddleware(middleware1, middleware2));\nexport default store;","map":{"version":3,"names":["applyMiddleware","createStore","todoApp","composeWithDevTools","store","middleware1","middleware2"],"sources":["/Users/choi/Desktop/React/redux/redux-basic/src/redux/store.js"],"sourcesContent":["import { applyMiddleware, createStore } from \"redux\"\nimport todoApp from \"./reducers/reducer\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\n\n// function middleware1(store) {\n// \tconsole.log(\"middleware1\", 0)\n// \treturn (next) => {\n// \t\tconsole.log(\"middleware1\", 1, next)\n// \t\treturn (action) => {\n// \t\t\tconsole.log(\"middleware1\", 2)\n// \t\t\tconst returnValue = next(action)\n// \t\t\tconsole.log(\"middleware1\", 3)\n// \t\t\treturn returnValue\n// \t\t}\n// \t}\n// }\n\n// function middleware2(store) {\n// \tconsole.log(\"middleware2\", 0)\n// \treturn (next) => {\n// \t\tconsole.log(\"middleware2\", 1, next)\n// \t\treturn (action) => {\n// \t\t\tconsole.log(\"middleware2\", 2)\n// \t\t\tconst returnValue = next(action)\n// \t\t\tconsole.log(\"middleware2\", 3)\n// \t\t\treturn returnValue\n// \t\t}\n// \t}\n// }\n\nconst store = createStore(todoApp, applyMiddleware(middleware1, middleware2))\n\nexport default store\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGH,WAAW,CAACC,OAAD,EAAUF,eAAe,CAACK,WAAD,EAAcC,WAAd,CAAzB,CAAzB;AAEA,eAAeF,KAAf"},"metadata":{},"sourceType":"module"}