{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\";\nimport todoApp from \"./modules/reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport promise from \"redux-promise-middleware\"; // function middleware1(store) {\n// \tconsole.log(\"middleware1\", 0)\n// \treturn (next) => {\n// \t\tconsole.log(\"middleware1\", 1, next)\n// \t\treturn (action) => {\n// \t\t\tconsole.log(\"middleware1\", 2)\n// \t\t\tconst returnValue = next(action)\n// \t\t\tconsole.log(\"middleware1\", 3)\n// \t\t\treturn returnValue\n// \t\t}\n// \t}\n// }\n// function middleware2(store) {\n// \tconsole.log(\"middleware2\", 0)\n// \treturn (next) => {\n// \t\tconsole.log(\"middleware2\", 1, next)\n// \t\treturn (action) => {\n// \t\t\tconsole.log(\"middleware2\", 2)\n// \t\t\tconst returnValue = next(action)\n// \t\t\tconsole.log(\"middleware2\", 3)\n// \t\t\treturn returnValue\n// \t\t}\n// \t}\n// }\n\nconst store = createStore(todoApp, composeWithDevTools(applyMiddleware(thunk, promise)));\nexport default store;","map":{"version":3,"names":["applyMiddleware","createStore","todoApp","composeWithDevTools","thunk","promise","store"],"sources":["/Users/choi/Desktop/React/redux/redux-advacned/src/redux/store.js"],"sourcesContent":["import { applyMiddleware, createStore } from \"redux\"\nimport todoApp from \"./modules/reducer\"\nimport { composeWithDevTools } from \"redux-devtools-extension\"\nimport thunk from \"redux-thunk\"\nimport promise from \"redux-promise-middleware\"\n\n// function middleware1(store) {\n// \tconsole.log(\"middleware1\", 0)\n// \treturn (next) => {\n// \t\tconsole.log(\"middleware1\", 1, next)\n// \t\treturn (action) => {\n// \t\t\tconsole.log(\"middleware1\", 2)\n// \t\t\tconst returnValue = next(action)\n// \t\t\tconsole.log(\"middleware1\", 3)\n// \t\t\treturn returnValue\n// \t\t}\n// \t}\n// }\n\n// function middleware2(store) {\n// \tconsole.log(\"middleware2\", 0)\n// \treturn (next) => {\n// \t\tconsole.log(\"middleware2\", 1, next)\n// \t\treturn (action) => {\n// \t\t\tconsole.log(\"middleware2\", 2)\n// \t\t\tconst returnValue = next(action)\n// \t\t\tconsole.log(\"middleware2\", 3)\n// \t\t\treturn returnValue\n// \t\t}\n// \t}\n// }\n\nconst store = createStore(todoApp, composeWithDevTools(applyMiddleware(thunk, promise)))\n\nexport default store\n"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,0BAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGL,WAAW,CAACC,OAAD,EAAUC,mBAAmB,CAACH,eAAe,CAACI,KAAD,EAAQC,OAAR,CAAhB,CAA7B,CAAzB;AAEA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}